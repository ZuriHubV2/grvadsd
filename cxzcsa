-- üçì Visual-only Strawberry Elephant (client-side only)
-- This just shows it; does NOT clone or affect the real server brainrot

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer

-- references
local models = ReplicatedStorage:WaitForChild("Models")
local animals = models:WaitForChild("Animals")
local anims = ReplicatedStorage:WaitForChild("Animations"):WaitForChild("Animals")

local brainrotName = "Strawberry Elephant"
local source = animals:FindFirstChild(brainrotName)
if not source then
    warn("Model not found for " .. brainrotName)
    return
end

-- Instead of cloning, create a local ‚Äúvisual shell‚Äù (empty model)
local visual = Instance.new("Model")
visual.Name = brainrotName .. "_VisualOnly"
visual.Parent = Workspace:FindFirstChild("RenderedMovingAnimals") or Workspace

-- copy just mesh and texture info (not actual Instance clone)
for _, part in ipairs(source:GetDescendants()) do
	if part:IsA("BasePart") then
		local p = Instance.new("Part")
		p.Name = part.Name
		p.Size = part.Size
		p.CFrame = part.CFrame
		p.Color = part.Color
		p.Material = part.Material
		p.Transparency = part.Transparency
		p.Anchored = true -- keeps it purely visual
		p.CanCollide = false
		p.Parent = visual
	end
end

-- place it in front of your character
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
visual:PivotTo(hrp.CFrame * CFrame.new(0, 0, -10))

-- simple movement like other RenderedMovingAnimals (straight Start‚ÜíEnd loop if those exist)
local rendered = Workspace:FindFirstChild("RenderedMovingAnimals")
local startPart = rendered and rendered:FindFirstChild("Start")
local endPart = rendered and rendered:FindFirstChild("End")

if startPart and endPart then
	task.spawn(function()
		local parts = visual:GetChildren()
		while task.wait() do
			-- move forward
			for _, part in ipairs(parts) do
				TweenService:Create(
					part,
					TweenInfo.new(10, Enum.EasingStyle.Linear),
					{ CFrame = part.CFrame * CFrame.new((endPart.Position - startPart.Position).Unit * 100) }
				):Play()
			end
			task.wait(10)
			-- move backward
			for _, part in ipairs(parts) do
				TweenService:Create(
					part,
					TweenInfo.new(10, Enum.EasingStyle.Linear),
					{ CFrame = part.CFrame * CFrame.new((startPart.Position - endPart.Position).Unit * 100) }
				):Play()
			end
			task.wait(10)
		end
	end)
end

print("[Client] Showing visual Strawberry Elephant only (no cloning, no server effect).")
